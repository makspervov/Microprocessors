
Zadanie1_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000226  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000226  0000029a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ab6  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000680  00000000  00000000  00000e3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000468  00000000  00000000  000014be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e4  00000000  00000000  00001928  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b6  00000000  00000000  00001a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ff  00000000  00000000  00001dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000021c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 0e 01 	call	0x21c	; 0x21c <main>
  7a:	0c 94 11 01 	jmp	0x222	; 0x222 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <clearPosition>:
		write(symbol2, 7);		//wypisanie tekstu
		_delay_ms(500);			//op??nienie co 0,5 s
		clearLCD();				//oczy?ccienie LCD
		write(symbol3, 8);		//wypisanie tekstu
		_delay_ms(500);			//op??nienie co 0,5 s		
		clearLCD();				//oczy?ccienie LCD
  82:	98 b3       	in	r25, 0x18	; 24
  84:	98 60       	ori	r25, 0x08	; 8
  86:	98 bb       	out	0x18, r25	; 24
  88:	98 b3       	in	r25, 0x18	; 24
  8a:	28 2f       	mov	r18, r24
  8c:	20 7f       	andi	r18, 0xF0	; 240
  8e:	9f 70       	andi	r25, 0x0F	; 15
  90:	92 2b       	or	r25, r18
  92:	98 bb       	out	0x18, r25	; 24
  94:	98 b3       	in	r25, 0x18	; 24
  96:	97 7f       	andi	r25, 0xF7	; 247
  98:	98 bb       	out	0x18, r25	; 24
  9a:	00 00       	nop
  9c:	98 b3       	in	r25, 0x18	; 24
  9e:	98 60       	ori	r25, 0x08	; 8
  a0:	98 bb       	out	0x18, r25	; 24
  a2:	20 e1       	ldi	r18, 0x10	; 16
  a4:	82 9f       	mul	r24, r18
  a6:	c0 01       	movw	r24, r0
  a8:	11 24       	eor	r1, r1
  aa:	98 b3       	in	r25, 0x18	; 24
  ac:	9f 70       	andi	r25, 0x0F	; 15
  ae:	89 2b       	or	r24, r25
  b0:	88 bb       	out	0x18, r24	; 24
  b2:	88 b3       	in	r24, 0x18	; 24
  b4:	87 7f       	andi	r24, 0xF7	; 247
  b6:	88 bb       	out	0x18, r24	; 24
  b8:	83 ed       	ldi	r24, 0xD3	; 211
  ba:	90 e3       	ldi	r25, 0x30	; 48
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <clearPosition+0x3a>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <clearPosition+0x40>
  c2:	00 00       	nop
  c4:	08 95       	ret

000000c6 <clearLCD>:
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	8b 7f       	andi	r24, 0xFB	; 251
  ca:	88 bb       	out	0x18, r24	; 24
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
  d2:	88 b3       	in	r24, 0x18	; 24
  d4:	84 60       	ori	r24, 0x04	; 4
  d6:	88 bb       	out	0x18, r24	; 24
  d8:	87 e9       	ldi	r24, 0x97	; 151
  da:	9a e3       	ldi	r25, 0x3A	; 58
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <clearLCD+0x16>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <clearLCD+0x1c>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <LCDinit>:
  e6:	8c ef       	ldi	r24, 0xFC	; 252
  e8:	87 bb       	out	0x17, r24	; 23
  ea:	18 ba       	out	0x18, r1	; 24
  ec:	88 b3       	in	r24, 0x18	; 24
  ee:	8b 7f       	andi	r24, 0xFB	; 251
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	88 e2       	ldi	r24, 0x28	; 40
  f4:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
  f8:	88 b3       	in	r24, 0x18	; 24
  fa:	84 60       	ori	r24, 0x04	; 4
  fc:	88 bb       	out	0x18, r24	; 24
  fe:	88 b3       	in	r24, 0x18	; 24
 100:	84 60       	ori	r24, 0x04	; 4
 102:	88 bb       	out	0x18, r24	; 24
 104:	86 e0       	ldi	r24, 0x06	; 6
 106:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
 10a:	88 b3       	in	r24, 0x18	; 24
 10c:	84 60       	ori	r24, 0x04	; 4
 10e:	88 bb       	out	0x18, r24	; 24
 110:	88 b3       	in	r24, 0x18	; 24
 112:	8b 7f       	andi	r24, 0xFB	; 251
 114:	88 bb       	out	0x18, r24	; 24
 116:	8c e0       	ldi	r24, 0x0C	; 12
 118:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
 11c:	88 b3       	in	r24, 0x18	; 24
 11e:	84 60       	ori	r24, 0x04	; 4
 120:	88 bb       	out	0x18, r24	; 24
 122:	0e 94 63 00 	call	0xc6	; 0xc6 <clearLCD>
 126:	08 95       	ret

00000128 <setCursor>:
 128:	98 b3       	in	r25, 0x18	; 24
 12a:	9b 7f       	andi	r25, 0xFB	; 251
 12c:	98 bb       	out	0x18, r25	; 24
 12e:	90 e4       	ldi	r25, 0x40	; 64
 130:	89 9f       	mul	r24, r25
 132:	60 0d       	add	r22, r0
 134:	11 24       	eor	r1, r1
 136:	86 2f       	mov	r24, r22
 138:	80 68       	ori	r24, 0x80	; 128
 13a:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
 13e:	88 b3       	in	r24, 0x18	; 24
 140:	84 60       	ori	r24, 0x04	; 4
 142:	88 bb       	out	0x18, r24	; 24
 144:	81 ee       	ldi	r24, 0xE1	; 225
 146:	94 e0       	ldi	r25, 0x04	; 4
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <setCursor+0x20>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <setCursor+0x26>
 14e:	00 00       	nop
 150:	08 95       	ret

00000152 <write>:
 152:	0f 93       	push	r16
 154:	1f 93       	push	r17
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	8c 01       	movw	r16, r24
 15c:	d6 2f       	mov	r29, r22
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	0e 94 94 00 	call	0x128	; 0x128 <setCursor>
 166:	c0 e0       	ldi	r28, 0x00	; 0
 168:	0f c0       	rjmp	.+30     	; 0x188 <write+0x36>
 16a:	f8 01       	movw	r30, r16
 16c:	ec 0f       	add	r30, r28
 16e:	f1 1d       	adc	r31, r1
 170:	c7 fd       	sbrc	r28, 7
 172:	fa 95       	dec	r31
 174:	80 81       	ld	r24, Z
 176:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
 17a:	c0 31       	cpi	r28, 0x10	; 16
 17c:	21 f4       	brne	.+8      	; 0x186 <write+0x34>
 17e:	60 e0       	ldi	r22, 0x00	; 0
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	0e 94 94 00 	call	0x128	; 0x128 <setCursor>
 186:	cf 5f       	subi	r28, 0xFF	; 255
 188:	cd 17       	cp	r28, r29
 18a:	7c f3       	brlt	.-34     	; 0x16a <write+0x18>
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	08 95       	ret

00000196 <LCDclear_y>:
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	c8 2f       	mov	r28, r24
 19c:	d6 2f       	mov	r29, r22
 19e:	6f ef       	ldi	r22, 0xFF	; 255
 1a0:	68 0f       	add	r22, r24
 1a2:	0e 94 94 00 	call	0x128	; 0x128 <setCursor>
 1a6:	0e c0       	rjmp	.+28     	; 0x1c4 <LCDclear_y+0x2e>
 1a8:	c1 31       	cpi	r28, 0x11	; 17
 1aa:	40 f0       	brcs	.+16     	; 0x1bc <LCDclear_y+0x26>
 1ac:	60 e0       	ldi	r22, 0x00	; 0
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	0e 94 94 00 	call	0x128	; 0x128 <setCursor>
 1b4:	84 e1       	ldi	r24, 0x14	; 20
 1b6:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
 1ba:	03 c0       	rjmp	.+6      	; 0x1c2 <LCDclear_y+0x2c>
 1bc:	84 e1       	ldi	r24, 0x14	; 20
 1be:	0e 94 41 00 	call	0x82	; 0x82 <clearPosition>
 1c2:	cf 5f       	subi	r28, 0xFF	; 255
 1c4:	cd 17       	cp	r28, r29
 1c6:	80 f3       	brcs	.-32     	; 0x1a8 <LCDclear_y+0x12>
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret

000001ce <zadanie1>:
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	6f 97       	sbiw	r28, 0x1f	; 31
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
 1e2:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDinit>
 1e6:	8f e1       	ldi	r24, 0x1F	; 31
 1e8:	e0 e6       	ldi	r30, 0x60	; 96
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	de 01       	movw	r26, r28
 1ee:	11 96       	adiw	r26, 0x01	; 1
 1f0:	01 90       	ld	r0, Z+
 1f2:	0d 92       	st	X+, r0
 1f4:	8a 95       	dec	r24
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <zadanie1+0x22>
 1f8:	6e e1       	ldi	r22, 0x1E	; 30
 1fa:	ce 01       	movw	r24, r28
 1fc:	01 96       	adiw	r24, 0x01	; 1
 1fe:	0e 94 a9 00 	call	0x152	; 0x152 <write>
 202:	6b e0       	ldi	r22, 0x0B	; 11
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	0e 94 cb 00 	call	0x196	; 0x196 <LCDclear_y>
 20a:	6f 96       	adiw	r28, 0x1f	; 31
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	f8 94       	cli
 210:	de bf       	out	0x3e, r29	; 62
 212:	0f be       	out	0x3f, r0	; 63
 214:	cd bf       	out	0x3d, r28	; 61
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <main>:
	}
}

int main(void)
{
	zadanie1();				//funkcja zadania 1
 21c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <zadanie1>
 220:	ff cf       	rjmp	.-2      	; 0x220 <main+0x4>

00000222 <_exit>:
 222:	f8 94       	cli

00000224 <__stop_program>:
 224:	ff cf       	rjmp	.-2      	; 0x224 <__stop_program>
