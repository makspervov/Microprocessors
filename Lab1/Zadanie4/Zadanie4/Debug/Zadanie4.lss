
Zadanie4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007f2  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058b  00000000  00000000  000009fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031e  00000000  00000000  00000f89  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000317  00000000  00000000  000012cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000288  00000000  00000000  000015e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000186b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <util/delay.h>


int main(void)
{
	DDRA=0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
    while (1) 
    {
		PORTA|=0b00010000;
  70:	8b b3       	in	r24, 0x1b	; 27
  72:	80 61       	ori	r24, 0x10	; 16
  74:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  76:	87 ea       	ldi	r24, 0xA7	; 167
  78:	91 e6       	ldi	r25, 0x61	; 97
  7a:	01 97       	sbiw	r24, 0x01	; 1
  7c:	f1 f7       	brne	.-4      	; 0x7a <main+0xe>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <main+0x14>
  80:	00 00       	nop
		_delay_ms(100);
		PORTA|=0b00110000;
  82:	8b b3       	in	r24, 0x1b	; 27
  84:	80 63       	ori	r24, 0x30	; 48
  86:	8b bb       	out	0x1b, r24	; 27
  88:	87 ea       	ldi	r24, 0xA7	; 167
  8a:	91 e6       	ldi	r25, 0x61	; 97
  8c:	01 97       	sbiw	r24, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <main+0x20>
  90:	00 c0       	rjmp	.+0      	; 0x92 <main+0x26>
  92:	00 00       	nop
		_delay_ms(100);
		PORTA|=0b01110000;
  94:	8b b3       	in	r24, 0x1b	; 27
  96:	80 67       	ori	r24, 0x70	; 112
  98:	8b bb       	out	0x1b, r24	; 27
  9a:	87 ea       	ldi	r24, 0xA7	; 167
  9c:	91 e6       	ldi	r25, 0x61	; 97
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <main+0x32>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x38>
  a4:	00 00       	nop
		_delay_ms(100);
		PORTA|=0b11110000;
  a6:	8b b3       	in	r24, 0x1b	; 27
  a8:	80 6f       	ori	r24, 0xF0	; 240
  aa:	8b bb       	out	0x1b, r24	; 27
  ac:	87 ea       	ldi	r24, 0xA7	; 167
  ae:	91 e6       	ldi	r25, 0x61	; 97
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <main+0x44>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x4a>
  b6:	00 00       	nop
		_delay_ms(100);
		
		PORTA&=0b00001111;
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	8f 70       	andi	r24, 0x0F	; 15
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	87 ea       	ldi	r24, 0xA7	; 167
  c0:	91 e6       	ldi	r25, 0x61	; 97
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x56>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x5c>
  c8:	00 00       	nop
		_delay_ms(100);
		
		PORTA|=0b00001000;
  ca:	8b b3       	in	r24, 0x1b	; 27
  cc:	88 60       	ori	r24, 0x08	; 8
  ce:	8b bb       	out	0x1b, r24	; 27
  d0:	87 ea       	ldi	r24, 0xA7	; 167
  d2:	91 e6       	ldi	r25, 0x61	; 97
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <main+0x68>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x6e>
  da:	00 00       	nop
		_delay_ms(100);
		PORTA|=0b00001100;
  dc:	8b b3       	in	r24, 0x1b	; 27
  de:	8c 60       	ori	r24, 0x0C	; 12
  e0:	8b bb       	out	0x1b, r24	; 27
  e2:	87 ea       	ldi	r24, 0xA7	; 167
  e4:	91 e6       	ldi	r25, 0x61	; 97
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <main+0x7a>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x80>
  ec:	00 00       	nop
		_delay_ms(100);
		PORTA|=0b00001110;
  ee:	8b b3       	in	r24, 0x1b	; 27
  f0:	8e 60       	ori	r24, 0x0E	; 14
  f2:	8b bb       	out	0x1b, r24	; 27
  f4:	87 ea       	ldi	r24, 0xA7	; 167
  f6:	91 e6       	ldi	r25, 0x61	; 97
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x8c>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x92>
  fe:	00 00       	nop
		_delay_ms(100);
		PORTA|=0b00001111;
 100:	8b b3       	in	r24, 0x1b	; 27
 102:	8f 60       	ori	r24, 0x0F	; 15
 104:	8b bb       	out	0x1b, r24	; 27
 106:	87 ea       	ldi	r24, 0xA7	; 167
 108:	91 e6       	ldi	r25, 0x61	; 97
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <main+0x9e>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0xa4>
 110:	00 00       	nop
		_delay_ms(100);
		
		PORTA&=0b11110000;
 112:	8b b3       	in	r24, 0x1b	; 27
 114:	80 7f       	andi	r24, 0xF0	; 240
 116:	8b bb       	out	0x1b, r24	; 27
 118:	87 ea       	ldi	r24, 0xA7	; 167
 11a:	91 e6       	ldi	r25, 0x61	; 97
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <main+0xb0>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0xb6>
 122:	00 00       	nop
 124:	a5 cf       	rjmp	.-182    	; 0x70 <main+0x4>

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
